Урок 3, задание 1 
Проанализировать структуру БД vk, предложить усовершенствования

Структура понятна и логична. 
И до добавления таблицы с лайками вопросов не вызывала. 

Однако с лайками не все просто. 
Проблему вижу в следующем: реляционная структура не позволяет объединять лайки по разным объектам в одну таблицу. 
То, как изначально реализовал эту таблицу я сам, мне не понравилось: лайк всегда должен ссылаться на один объект, 
а в одной таблице мы имеем три колонки для ссылок на разные объекты и не имеем встроенных инструментов, чтобы 
обязать всегда заполнять только одну ссылку из трех. 

Правильным решением для реляционной базы на мой взгляд будет отдельная таблица лайков для объектов одного типа (для медиафайлов, постов и пользователей).
Это, кстати, позволит сделать набор значений лайков контекстно зависимым.
Недостатком такого подхода является почти полное дублирование структуры данных в разных таблицах лайков (ее можно сделать полностью идентичной, 
если для ссылки на id оцениваемых объектов в соответствующих таблицах использовать, например, атрибут с именем object_id).
Переделал в соответствии с этим подходом. 

Альтернативный подход - сделать единую таблицу всех объектов с разведением их по типам, и таблицу отношений между объектами. 
Но, к сожалению, реляционная модель не позволяет накладывать ограничения и управлять связями с другими таблицами в зависимости от типа объекта. 
А это в свою очередь не позволяет изящно отделить таблицы с атрибутами, присущими одному типу объекта, от таблиц с атрибутами других типов объектов. 
Можно было бы конечно, забрать такие атрибуты в один атрибут типа JSON, но тогда теряется мощь реляционных связей (извлечение атрибутов из JSON - 
отдельная дополнительная задача, и нативного инструментария под нее в реляционных СУБД просто нет). 

Возможно, я чего-то не знаю, тогда буду признателен за обратную связь по этому вопросу. 

     
